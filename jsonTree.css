/*
 * Based on: JSON Tree library
 * http://github.com/summerstyle/jsonTreeViewer
 *
 * Copyright 2017 Vera Lobacheva (http://iamvera.com)
 * Released under the MIT license (LICENSE.txt)
 */

/* Background for the tree. May use for <body> element */
.jsontree_bg {
    background: #FFF;
}

/* Styles for the container of the tree (e.g. fonts, margins etc.) */
.jsontree_tree {
    margin: 0;
    padding: 0;
    font-family: monospace;
    font-size: 14px;
    list-style: none;
}

/* Styles for a list of child nodes */
.jsontree_child-nodes {
    display: none;
    margin-left: 0;
    padding-left: 1rem;
    margin-bottom: 0;
    line-height: 1.67;
    list-style: none;
}
.jsontree_node_expanded > .jsontree_value-wrapper > .jsontree_value > .jsontree_child-nodes {
    display: block;
}

/* Styles for labels */
.jsontree_label-wrapper {
    float: left;
    margin-right: 8px;
}
.jsontree_label {
    font-weight: normal;
    vertical-align: top;
    color: #000;
    position: relative;
    padding: 1px;
    border-radius: 4px;
    cursor: default;
}
.jsontree_node_marked > .jsontree_label-wrapper > .jsontree_label {
    background: #fff2aa;
}

/* Styles for values */
.jsontree_value-wrapper {
    display: block;
    overflow: hidden;
}
.jsontree_node_complex > .jsontree_value-wrapper {
    overflow: inherit;
}
.jsontree_value {
    vertical-align: top;
    display: inline;
}
.jsontree_value_null {
    color: #777;
    font-weight: bold;
}
.jsontree_value_string {
    color: #025900;
    font-weight: bold;
}
.jsontree_value_number {
    color: #000E59;
    font-weight: bold;
}
.jsontree_value_boolean {
    color: #600100;
    font-weight: bold;
}

/* Styles for active elements */
.jsontree_expand-button {
    position: absolute;
    top: 3px;
    left: -15px;
    display: none; /* CHANGED: Was "block" */
    width: 11px;
    height: 11px;
    background-image: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20width%3D%2211%22%20height%3D%2222%22%3E%3Cdefs%3E%3ClinearGradient%20id%3D%22a%22%3E%3Cstop%20offset%3D%220%22%2F%3E%3Cstop%20offset%3D%221%22%20stop-opacity%3D%220%22%2F%3E%3C%2FlinearGradient%3E%3CradialGradient%20xlink%3Ahref%3D%22%23a%22%20cx%3D%229.739%22%20cy%3D%229.716%22%20fx%3D%229.739%22%20fy%3D%229.716%22%20r%3D%223.709%22%20gradientUnits%3D%22userSpaceOnUse%22%2F%3E%3C%2Fdefs%3E%3Cg%20stroke%3D%22%23000%22%20fill%3D%22none%22%3E%3Cg%20transform%3D%22translate(-129.5%20-333.862)%20translate(0%20.188)%22%3E%3Crect%20transform%3D%22matrix(.962%200%200%20.971%204.943%2011.548)%22%20ry%3D%222%22%20rx%3D%222%22%20y%3D%22332.362%22%20x%3D%22130%22%20height%3D%2210.337%22%20width%3D%2210.432%22%20opacity%3D%22.5%22%2F%3E%3Cg%3E%3Cpath%20d%3D%22M132%20339.175h6%22%20opacity%3D%22.5%22%2F%3E%3Cpath%20d%3D%22M135%20336.175v6%22%20opacity%3D%22.5%22%2F%3E%3C%2Fg%3E%3C%2Fg%3E%3Cg%20transform%3D%22translate(-129.5%20-333.862)%22%3E%3Crect%20width%3D%2210.432%22%20height%3D%2210.337%22%20x%3D%22130%22%20y%3D%22332.362%22%20rx%3D%222%22%20ry%3D%222%22%20transform%3D%22matrix(.962%200%200%20.971%204.943%2022.736)%22%20opacity%3D%22.5%22%2F%3E%3Cpath%20d%3D%22M132%20350.362h6%22%20opacity%3D%22.5%22%2F%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}
.jsontree_node_expanded > .jsontree_label-wrapper > .jsontree_label > .jsontree_expand-button {
    background-position: 0 -11px;
}
.jsontree_show-more {
    cursor: pointer;
}
.jsontree_node_expanded > .jsontree_value-wrapper > .jsontree_value > .jsontree_show-more {
    display: none;
}
.jsontree_node_empty > .jsontree_label-wrapper > .jsontree_label > .jsontree_expand-button,
.jsontree_node_empty > .jsontree_value-wrapper > .jsontree_value > .jsontree_show-more {
    display: none !important;
}
.jsontree_node_complex > .jsontree_label-wrapper > .jsontree_label {
    cursor: pointer;
}
.jsontree_node_empty > .jsontree_label-wrapper > .jsontree_label {
    cursor: default !important;
}
